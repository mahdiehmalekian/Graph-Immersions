The following results are used in the proof of Lemma 3.7 of the paper
DeVos, Malekian, The structure of graphs with no W_4 immersion, https://arxiv.org/abs/1810.12873.

****************************************************************************************************************************************
In the following, all graphs are undirected and loopless and have one distinguished vertex, called the root.

By a 'well-edge-connected rooted graph', we mean a 3-edge-connected, internally 4-edge-connected rooted multigraph in which deg(root)>=4
and d(root, root neighbor)>= 5 for any neighbor of the root vertex.
Also, if X is a subset of vertices V with |X|>=3 and |V\X|>=3 we have d(X)>=5.

****************************************************************************************************************************************
Computation for rooted graphs on 5, 6, 7, and 8 vertices:
(Edge multiplicities are at most eight.)

The number of simple connected rooted graphs on 5 vertices without an immersion of rooted W_4 is 55.
The number of well-edge-connected rooted graphs on 5 vertices without an immersion of rooted W_4 is 138.

The number of simple connected rooted graphs on 6 vertices without an immersion of rooted W_4 is 355.
The number of well-edge-connected rooted graphs on 6 vertices without an immersion of rooted W_4 is 104.

The number of simple connected rooted graphs on 7 vertices without an immersion of rooted W_4 is 3142.
The number of well-edge-connected rooted graphs on 7 vertices without an immersion of rooted W_4 is 41.

The number of simple connected rooted graphs on 8 vertices without an immersion of rooted W_4 is 39939.
The number of well-edge-connected rooted graphs on 8 vertices without an immersion of rooted W_4 is 0.


Calculation was done in 0:18:55.430616.

****************************************************************************************************************************************
After filtering out Type 2 graphs:


In the family of well-edge-connected rooted graphs, the followings are the only graphs without an immersion of rooted W_4 which are not Type 2.
(Note: The edge sets are in the form of {edge: edge_multiplicity})

The connected graph with root 3 and edge set {(0, 3): 2, (0, 4): 1, (1, 3): 2, (1, 4): 1, (2, 3): 2, (2, 4): 1}

The connected graph with root 3 and edge set {(0, 3): 3, (0, 4): 1, (1, 3): 2, (1, 4): 1, (2, 3): 2, (2, 4): 1}

The connected graph with root 3 and edge set {(0, 3): 2, (0, 4): 2, (1, 3): 2, (1, 4): 1, (2, 3): 2, (2, 4): 1}

The connected graph with root 3 and edge set {(0, 3): 2, (0, 4): 2, (1, 3): 2, (1, 4): 2, (2, 3): 2, (2, 4): 2}

The connected graph with root 3 and edge set {(0, 3): 3, (0, 4): 2, (1, 3): 2, (1, 4): 1, (2, 3): 2, (2, 4): 1}

The connected graph with root 3 and edge set {(0, 3): 3, (0, 4): 1, (1, 3): 3, (1, 4): 1, (2, 3): 2, (2, 4): 1}

The connected graph with root 3 and edge set {(0, 3): 3, (0, 4): 1, (1, 3): 2, (1, 4): 2, (2, 3): 2, (2, 4): 1}

The connected graph with root 3 and edge set {(0, 3): 2, (0, 4): 2, (1, 3): 2, (1, 4): 2, (2, 3): 2, (2, 4): 1}

The connected graph with root 3 and edge set {(0, 3): 3, (0, 4): 1, (1, 3): 3, (1, 4): 1, (2, 3): 3, (2, 4): 1}

The connected graph with root 3 and edge set {(0, 3): 3, (0, 4): 1, (1, 3): 3, (1, 4): 1, (2, 3): 2, (2, 4): 2}

The connected graph with root 3 and edge set {(0, 3): 3, (0, 4): 1, (1, 3): 2, (1, 4): 2, (2, 3): 2, (2, 4): 2}

The connected graph with root 3 and edge set {(0, 3): 2, (0, 4): 1, (1, 3): 2, (1, 4): 1, (2, 3): 2, (2, 4): 1, (3, 4): 1}

The connected graph with root 0 and edge set {(0, 2): 2, (0, 3): 2, (0, 4): 2, (1, 2): 1, (1, 3): 1, (1, 4): 1, (2, 4): 1}

The connected graph with root 0 and edge set {(0, 2): 2, (0, 3): 3, (0, 4): 2, (1, 2): 1, (1, 3): 1, (1, 4): 1, (2, 4): 1}

The connected graph with root 0 and edge set {(0, 2): 2, (0, 3): 2, (0, 4): 2, (1, 2): 1, (1, 3): 2, (1, 4): 1, (2, 4): 1}

****************************************************************************************************************************************
The above graphs are the graphs of Type 3 or Type 4.
A drawing of these garphs can be found in 'drawing rooted W_4 obstructions.ipynb'.